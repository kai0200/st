# default statusbar colors
set-option -g status-style fg=colour136,bg=colour235 #yellow and base02

# default window title colors
set-window-option -g window-status-style fg=colour244,bg=default #base0 and default
#set-window-option -g window-status-style dim

# active window title colors
#set-window-option -g window-status-current-style fg=colour166,bg=default #orange and default
set-window-option -g window-status-current-style bright

# pane border
set-option -g pane-border-style fg=colour235 #base02
set-option -g pane-active-border-style fg=colour240 #base01

# message text
set-option -g message-style fg=colour166,bg=colour235 #orange and base02

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green

# bell
set-window-option -g window-status-bell-style fg=colour235,bg=colour160 #base02, red

# https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf
# http://louiszhai.github.io/2017/09/30/tmux/  # 中文手册


#--------------------------- base config begin -------------------------------

# 全局设置
setw -g xterm-keys on
# Using set -gq instead of set -g will silence the unknown option error, while still setting it on old versions of tmux
#set-option -g default-terminal "screen-256color"
set-option -sa terminal-overrides ',screen-256color:RGB'

set -gq status-utf8 on                             # enable utf-8
set-option -g status-position top
# set-option -g status-position bottom

set-option -g history-limit 900000                # scrollback buffer n lines
set-option -g display-time 10000                   # 提示信息的持续时间；设置足够的时间以避免看不清提示，单位为毫秒
set-option -g repeat-time 1000                    # 控制台激活后的持续时间；设置合适的时间以避免每次操作都要先激活控制台，单位为毫秒
set-window-option -g display-panes-time 1500
set-option -g repeat-time 0                       # Allow the arrow key to be used immediately after changing windows

set-option -g renumber-windows off                 # window 0, 1, 2, remove 1, renumber to 0, 1
#set-option -g renumber-windows on                 # window 0, 1, 2, remove 1, renumber to 0, 1

# -------------------------------- session begin --------------------------------
bind -r ( switch-client -p
bind -r ) switch-client -n
# -------------------------------- session end --------------------------------


# auto window rename
#setw -g automatic-rename off
#set-option -g allow-rename off


set -g status-interval 1
set -g status-justify centre # center align window list
#set -g status-justify left # center align window list
set -g status-left-length  50
set -g status-right-length 140

set -g status-left '#[fg=green,bright bg=default] ❐ #S • #[fg=blue]%l:%M | '
set -g status-right '| #[fg=green,bg=default,bright]%Y-%m-%d %H:%M:%S #[default]'

#set -g status-right '#[fg=green,bg=default,bright]#(tmux-mem-cpu-load) #[fg=yellow,bright] #(whoami) #[fg=blue,bright]%Y-%m-%d %a %l:%M:%S #[default]'
#set -g status-right '#[fg=green,bg=default,bright]#(tmux-mem-cpu-load) #[fg=yellow,bright] #(whoami) #[fg=blue,bright]%Y-%m-%d #[default]'
#set -g status-right '#[fg=green,bg=default,bright]#(tmux-mem-cpu-load) #[fg=red,dim,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white,bg=default]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'

# C-b is not acceptable -- Vim uses it
#set-option -g prefix C-b
#bind C-b send-prefix
set -gu prefix2
unbind C-a
unbind C-b
set -g prefix C-b
bind C-b send-prefix
#bind-key C-b last-window

# -------------------------------- window begin --------------------------------
# Start numbering at 1
#set-option -g base-index 1                        #窗口的初始序号；默认为0，这里设置为1
set -g base-index 1

# [prefix-Ctrl-o] 窗口轮转
bind-key C-o rotate-window
# -------------------------------- window end --------------------------------

# -------------------------------- pane begin --------------------------------

# [prefix-q] 展示窗口数字并选择跳转
bind-key q display-panes

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# set to main-horizontal, 66% height for main pane
#bind m run-shell "~/.tmux/scripts/resize-adaptable.sh -l main-horizontal -p 66"
# Same thing for verical layouts
#bind M run-shell "~/.tmux/scripts/resize-adaptable.sh -l main-vertical -p 50"

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."


# https://github.com/edkolev/dots/blob/master/tmux.conf
# Updates for tmux 1.9's current pane splitting paths.

# from powerline
#run-shell "tmux set-environment -g TMUX_VERSION_MAJOR $(tmux -V | cut -d' ' -f2 | cut -d'.' -f1 | sed 's/[^0-9]*//g')"
#run-shell "tmux set-environment -g TMUX_VERSION_MINOR $(tmux -V | cut -d' ' -f2 | cut -d'.' -f2 | sed 's/[^0-9]*//g')"

# Vi copypaste mode
#set-window-option -g mode-keys vi
setw -g mouse on
if-shell "test '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 4 \)'" 'bind-key -Tcopy-mode-vi v send -X begin-selection; bind-key -Tcopy-mode-vi y send -X copy-selection-and-cancel'
if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 4\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'bind-key -t vi-copy v begin-selection; bind-key -t vi-copy y copy-selection'

# status bar
#if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 2\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'set-option -g status-utf8 on'


# fix pane_current_path on new window and splits
if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" 'unbind c; bind c new-window -c "#{pane_current_path}"'
if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" "unbind '\"'; bind '\"' split-window -v -c '#{pane_current_path}'"
if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" 'unbind v; bind v split-window -h -c "#{pane_current_path}"'
#if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" 'unbind %; bind % split-window -h -c "#{pane_current_path}"'


# Remap keys to my settings
unbind-key M-d      ; bind-key -n M-d   detach-client
unbind-key d        ; bind-key d        detach-client
unbind-key M-s      ; bind-key -n M-s   confirm-before -p "kill-window #W? (y/n)" kill-window
unbind-key M-c      ; bind-key -n M-c   command-prompt -p "tmux:"
#unbind-key M-m      ; bind-key -n M-m   command-prompt -p "Man:" "split-window 'man %%'"
unbind-key Tab      ; bind-key Tab      choose-window
unbind-key M-w      ; bind-key -n M-w   choose-window
unbind-key M-e      ; bind-key -n M-e   choose-session
unbind-key M-t      ; bind-key -n M-t   new-window
unbind-key t        ; bind-key t        new-window
unbind-key M-`      ; bind-key -n M-`   last-window
unbind-key n        ; bind-key n        next-window
#unbind-key p        ; bind-key p        previous-window
unbind-key M-n      ; bind-key -n M-n   next-window
unbind-key M-p      ; bind-key -n M-p   previous-window
#unbind-key M-right  ; bind-key -n M-right   next-window
#unbind-key M-left   ; bind-key -n M-left    previous-window

# Window selection
unbind-key 1        ; bind-key 1        select-window -t 1
unbind-key 2        ; bind-key 2        select-window -t 2
unbind-key 3        ; bind-key 3        select-window -t 3
unbind-key 4        ; bind-key 4        select-window -t 4
unbind-key 5        ; bind-key 5        select-window -t 5
unbind-key 6        ; bind-key 6        select-window -t 6
unbind-key 7        ; bind-key 7        select-window -t 7
unbind-key 8        ; bind-key 8        select-window -t 8
unbind-key 9        ; bind-key 9        select-window -t 9
unbind-key 0        ; bind-key 0        select-window -t 10
unbind-key M-1      ; bind-key -n M-1   select-window -t 1
unbind-key M-2      ; bind-key -n M-2   select-window -t 2
unbind-key M-3      ; bind-key -n M-3   select-window -t 3
unbind-key M-4      ; bind-key -n M-4   select-window -t 4
unbind-key M-5      ; bind-key -n M-5   select-window -t 5
unbind-key M-6      ; bind-key -n M-6   select-window -t 6
unbind-key M-7      ; bind-key -n M-7   select-window -t 7
unbind-key M-8      ; bind-key -n M-8   select-window -t 8
unbind-key M-9      ; bind-key -n M-9   select-window -t 9
unbind-key M-0      ; bind-key -n M-0   select-window -t 10
unbind-key M-z      ; bind-key -n M-z   resize-pane -Z

# Window splitting
unbind-key M--      ; bind-key -n M--   split-window -v
unbind-key M-\      ; bind-key -n M-\   split-window -h
unbind-key \        ; bind-key \        split-window -h
unbind-key |        ; bind-key |        split-window -h
unbind-key -        ; bind-key -        split-window -v

# Pane selection and resizing
unbind-key left     ; bind-key -n M-left     select-pane -L
unbind-key right    ; bind-key -n M-right    select-pane -R
unbind-key up       ; bind-key -n M-up       select-pane -U
unbind-key down     ; bind-key -n M-down     select-pane -D

#unbind-key left     ; bind-key -n M-h     select-pane -L
#unbind-key right    ; bind-key -n M-l     select-pane -R
#unbind-key up       ; bind-key -n M-j     select-pane -U
#unbind-key down     ; bind-key -n M-k     select-pane -D

unbind-key left     ; bind-key left     select-pane -L
unbind-key up       ; bind-key up       select-pane -U
unbind-key down     ; bind-key down     select-pane -D
unbind-key right    ; bind-key right    select-pane -R
unbind-key C-h      ; bind-key C-h      select-pane -L
unbind-key C-k      ; bind-key C-k      select-pane -U
unbind-key C-j      ; bind-key C-j      select-pane -D
unbind-key C-l      ; bind-key C-l      select-pane -R
#unbind-key z        ; bind-key -r z     resize-pane -Z
unbind-key j        ; bind-key -r j     resize-pane -D 5
unbind-key k        ; bind-key -r k     resize-pane -U 5
unbind-key h        ; bind-key -r h     resize-pane -L 5
unbind-key l        ; bind-key -r l     resize-pane -R 5
#unbind-key C-left   ; bind-key -r C-left    resize-pane -L 1
#unbind-key C-right  ; bind-key -r C-right   resize-pane -R 1
#unbind-key C-up     ; bind-key -r C-up      resize-pane -U 1
#unbind-key C-down   ; bind-key -r C-down    resize-pane -D 1

unbind-key @        ; bind-key @        confirm-before kill-window
unbind-key M-r      ; bind-key -n M-r   source-file ~/.tmux.conf
unbind-key q        ; bind-key q        list-keys
unbind-key M-q      ; bind-key -n M-q   list-keys

# 设置pane 不被修改
set-option -g allow-rename off


# Window splitting
unbind-key M--      ; bind-key -n M--   split-window -v
unbind-key M-\      ; bind-key -n M-\   split-window -h
unbind-key \        ; bind-key \        split-window -h
unbind-key |        ; bind-key |        split-window -h
unbind-key -        ; bind-key -        split-window -v

# Pane selection and resizing
unbind-key left     ; bind-key -n M-left     select-pane -L
unbind-key right    ; bind-key -n M-right    select-pane -R
unbind-key up       ; bind-key -n M-up       select-pane -U
unbind-key down     ; bind-key -n M-down     select-pane -D

#unbind-key left     ; bind-key -n M-h     select-pane -L
#unbind-key right    ; bind-key -n M-l     select-pane -R
#unbind-key up       ; bind-key -n M-j     select-pane -U
#unbind-key down     ; bind-key -n M-k     select-pane -D

unbind-key left     ; bind-key left     select-pane -L
unbind-key up       ; bind-key up       select-pane -U
unbind-key down     ; bind-key down     select-pane -D
unbind-key right    ; bind-key right    select-pane -R
unbind-key C-h      ; bind-key C-h      select-pane -L
unbind-key C-k      ; bind-key C-k      select-pane -U
unbind-key C-j      ; bind-key C-j      select-pane -D
unbind-key C-l      ; bind-key C-l      select-pane -R
#unbind-key z        ; bind-key -r z     resize-pane -Z
unbind-key j        ; bind-key -r j     resize-pane -D 5
unbind-key k        ; bind-key -r k     resize-pane -U 5
unbind-key h        ; bind-key -r h     resize-pane -L 5
unbind-key l        ; bind-key -r l     resize-pane -R 5
#unbind-key C-left   ; bind-key -r C-left    resize-pane -L 1
#unbind-key C-right  ; bind-key -r C-right   resize-pane -R 1
#unbind-key C-up     ; bind-key -r C-up      resize-pane -U 1
#unbind-key C-down   ; bind-key -r C-down    resize-pane -D 1

unbind-key @        ; bind-key @        confirm-before kill-window
unbind-key M-r      ; bind-key -n M-r   source-file ~/.tmux.conf
unbind-key q        ; bind-key q        list-keys
unbind-key M-q      ; bind-key -n M-q   list-keys

# 设置pane 不被修改
#set-option -g allow-rename off

# Copy mode
set-window-option -g mode-keys vi
#set-window-option -g mode-mouse off
set-option buffer-limit 20
#unbind-key M-NPage      ; bind-key -n M-NPage       copy-mode
#unbind-key M-PPage      ; bind-key -n M-PPage       copy-mode

# make scrolling with wheels work
set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# Copy mode
set -g mouse on
set-option buffer-limit 20
#unbind-key M-NPage      ; bind-key -n M-NPage       copy-mode
#unbind-key M-PPage      ; bind-key -n M-PPage       copy-mode
unbind-key M-i          ; bind-key -n M-i       paste-buffer
unbind-key M-o          ; bind-key -n M-o       copy-mode
unbind-key M-=          ; bind-key -n M-=       choose-buffer -Z
